{
  "name": "üé¨ AI Agent + –û—Ç–∫—Ä—ã—Ç—ã–µ —Ñ–æ—Ç–æ ‚Üí MCP –í–∏–¥–µ–æ",
  "active": true,
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger",
      "name": "üöÄ –°—Ç–∞—Ä—Ç",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "const topic = $input.first().json.topic || '–∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è';\n\nreturn {\n  json: {\n    topic: topic,\n    chatInput: `–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç –¥–ª—è –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã—Ö shorts –≤–∏–¥–µ–æ.\n\n–¢–µ–º–∞: ${topic}\n\n–°–æ–∑–¥–∞–π –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π:\n- –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 30-60 —Å–µ–∫—É–Ω–¥\n- 5-8 —Å—Ü–µ–Ω –ø–æ 3-8 —Å–µ–∫—É–Ω–¥ –∫–∞–∂–¥–∞—è\n- –ú–æ—â–Ω—ã–π –∫—Ä—é–∫ –≤ –ø–µ—Ä–≤—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã\n- –ß–µ—Ç–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∏–∑—É–∞–ª–∞\n- –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–æ—Ç–æ\n\n–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û JSON:\n{\n  \"title\": \"–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ\",\n  \"duration\": 45,\n  \"scenes\": [\n    {\n      \"id\": 1,\n      \"duration\": 6,\n      \"voiceover\": \"–¢–µ–∫—Å—Ç –æ–∑–≤—É—á–∫–∏\",\n      \"visual_description\": \"–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª–∞\",\n      \"search_keywords\": [\"crime scene\", \"police\"]\n    }\n  ],\n  \"total_voiceover\": \"–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –æ–∑–≤—É—á–∫–∏\"\n}`\n  }\n};"
      },
      "id": "prepare-data",
      "name": "üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "promptType": "auto",
        "text": "={{ $json.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [680, 300],
      "id": "ai-screenwriter-agent",
      "name": "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent"
    },
    {
      "parameters": {
        "model": "anthropic/claude-3.5-sonnet",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [680, 480],
      "id": "openrouter-chat-model",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "dctACn3yXSG7qIdH",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "video-creation-session"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [900, 480],
      "id": "simple-memory",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "jsCode": "// –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç –æ—Ç AI Agent\nconst response = $input.first().json.output;\nlet scenario;\n\ntry {\n  const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n  if (jsonMatch) {\n    scenario = JSON.parse(jsonMatch[0]);\n  } else {\n    throw new Error('JSON –Ω–µ –Ω–∞–π–¥–µ–Ω');\n  }\n} catch (error) {\n  console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error);\n  scenario = {\n    title: \"–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è\",\n    duration: 30,\n    scenes: [\n      {\n        id: 1,\n        duration: 10,\n        voiceover: \"–í —Ç–µ–º–Ω–æ–º –ø–µ—Ä–µ—É–ª–∫–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∑–∞–≥–∞–¥–æ—á–Ω–æ–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ\",\n        visual_description: \"–¢–µ–º–Ω–∞—è —É–ª–∏—Ü–∞ —Å –ø–æ–ª–∏—Ü–µ–π—Å–∫–æ–π –ª–µ–Ω—Ç–æ–π\",\n        search_keywords: [\"crime scene\", \"police tape\", \"dark street\"]\n      },\n      {\n        id: 2,\n        duration: 10,\n        voiceover: \"–î–µ—Ç–µ–∫—Ç–∏–≤—ã –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ\",\n        visual_description: \"–î–µ—Ç–µ–∫—Ç–∏–≤—ã –∏–∑—É—á–∞—é—Ç —É–ª–∏–∫–∏\",\n        search_keywords: [\"detective\", \"investigation\", \"evidence\"]\n      },\n      {\n        id: 3,\n        duration: 10,\n        voiceover: \"–ù–æ –ø—Ä–∞–≤–¥–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å —à–æ–∫–∏—Ä—É—é—â–µ–π\",\n        visual_description: \"–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ\",\n        search_keywords: [\"revelation\", \"shock\", \"truth\"]\n      }\n    ],\n    total_voiceover: \"–í —Ç–µ–º–Ω–æ–º –ø–µ—Ä–µ—É–ª–∫–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∑–∞–≥–∞–¥–æ—á–Ω–æ–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ. –î–µ—Ç–µ–∫—Ç–∏–≤—ã –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ. –ù–æ –ø—Ä–∞–≤–¥–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å —à–æ–∫–∏—Ä—É—é—â–µ–π.\"\n  };\n}\n\nreturn {\n  json: {\n    scenario: scenario,\n    topic: $('üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö').first().json.topic\n  }\n};"
      },
      "id": "parse-scenario",
      "name": "üìã –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "jsCode": "// –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\nconst scenario = $input.first().json.scenario;\nconst scenes = scenario.scenes || [];\n\n// –°–ø–∏—Å–æ–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (Unsplash, Pixabay)\nconst imageUrls = [\n  'https://images.unsplash.com/photo-1551698618-1dfe5d97d256?w=800&h=600&fit=crop', // crime scene\n  'https://images.unsplash.com/photo-1589829545856-d10d557cf95f?w=800&h=600&fit=crop', // detective\n  'https://images.unsplash.com/photo-1586339949916-3e9457bef6d3?w=800&h=600&fit=crop', // police\n  'https://images.unsplash.com/photo-1574375927938-d5a98e8ffe85?w=800&h=600&fit=crop', // investigation\n  'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=800&h=600&fit=crop', // dark street\n  'https://images.unsplash.com/photo-1511593358241-7eea1f3c84e5?w=800&h=600&fit=crop', // evidence\n  'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=800&h=600&fit=crop', // handcuffs\n  'https://images.unsplash.com/photo-1586339949916-3e9457bef6d3?w=800&h=600&fit=crop', // arrest\n  'https://images.unsplash.com/photo-1551698618-1dfe5d97d256?w=800&h=600&fit=crop', // warehouse\n  'https://images.unsplash.com/photo-1574375927938-d5a98e8ffe85?w=800&h=600&fit=crop'  // revelation\n];\n\n// –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è\nconst downloadList = [];\nfor (let i = 0; i < Math.min(imageUrls.length, 10); i++) {\n  downloadList.push({\n    url: imageUrls[i],\n    filename: `img${String(i + 1).padStart(3, '0')}.jpg`,\n    scene_id: i + 1\n  });\n}\n\nreturn downloadList.map(item => ({ json: item }));"
      },
      "id": "prepare-image-urls",
      "name": "üåê –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "download-images",
      "name": "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "jsCode": "// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –¥–∏—Å–∫\nconst fs = require('fs');\nconst path = require('path');\n\nconst executionId = $workflow.executionId;\nconst tempDir = `/tmp/n8n_video_${executionId}`;\n\nif (!fs.existsSync(tempDir)) {\n  fs.mkdirSync(tempDir, { recursive: true });\n}\n\nconst allItems = $input.all();\nconst scenario = $('üìã –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è').first().json.scenario;\n\nlet savedCount = 0;\nconst savedFiles = [];\n\nfor (let i = 0; i < allItems.length; i++) {\n  const item = allItems[i];\n  if (item.binary && item.binary.data) {\n    const filename = `img${String(i + 1).padStart(3, '0')}.jpg`;\n    const filepath = path.join(tempDir, filename);\n    \n    try {\n      const buffer = Buffer.from(item.binary.data.data, 'base64');\n      fs.writeFileSync(filepath, buffer);\n      savedCount++;\n      savedFiles.push({\n        id: `scene_${i + 1}`,\n        src: filepath,\n        type: \"image\"\n      });\n      console.log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${filename}`);\n    } catch (err) {\n      console.log('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', filename, err.message);\n    }\n  }\n}\n\nreturn {\n  json: {\n    tempDir: tempDir,\n    savedImages: savedCount,\n    savedFiles: savedFiles,\n    scenario: scenario,\n    executionId: executionId\n  }\n};"
      },
      "id": "save-images",
      "name": "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "jsCode": "// –°–æ–∑–¥–∞–µ–º JSON –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–∞\nconst scenario = $input.first().json.scenario;\nconst tempDir = $input.first().json.tempDir;\nconst savedFiles = $input.first().json.savedFiles;\nconst savedImages = $input.first().json.savedImages;\n\nconsole.log(`–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ MCP payload: ${savedImages} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);\nconsole.log('–°—Ü–µ–Ω–∞—Ä–∏–π:', scenario.title);\nconsole.log('–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:', tempDir);\n\n// –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π payload –¥–ª—è MCP API\nconst mcpPayload = {\n  files: savedFiles,\n  width: 1080,\n  height: 1920,\n  fps: 30,\n  durationPerPhoto: Math.floor(scenario.duration / savedImages) || 5,\n  outputFormat: \"mp4\",\n  \n  // TTS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n  tts: {\n    provider: \"kokoro\",\n    text: scenario.total_voiceover || \"–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –æ–∑–≤—É—á–∫–∏\"\n  },\n  \n  // –°—É–±—Ç–∏—Ç—Ä—ã\n  transcribeAudio: true,\n  burnSubtitles: true,\n  \n  // –≠—Ñ—Ñ–µ–∫—Ç—ã\n  effects: [\n    {\n      kind: \"zoom\",\n      params: {\n        startScale: 1.0,\n        endScale: 1.2\n      }\n    }\n  ],\n  \n  // –ê—É–¥–∏–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n  musicVolumeDb: -8,\n  ducking: {\n    enabled: true,\n    musicDuckDb: -8,\n    threshold: 0.05,\n    ratio: 8,\n    attack: 5,\n    release: 250\n  },\n  \n  // –û–≤–µ—Ä–ª–µ–∏\n  overlays: []\n};\n\nconsole.log('MCP Payload –≥–æ—Ç–æ–≤:', JSON.stringify(mcpPayload, null, 2));\n\nreturn {\n  json: {\n    mcp_payload: mcpPayload,\n    scenario: scenario,\n    tempDir: tempDir,\n    images_count: savedImages\n  }\n};"
      },
      "id": "prepare-mcp",
      "name": "üé≠ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è MCP",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://178.156.142.35:4123/api/create-video",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify($json.mcp_payload) }}",
        "options": {}
      },
      "id": "mcp-request",
      "name": "üé¨ MCP –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2220, 300]
    },
    {
      "parameters": {
        "jsCode": "// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç MCP\nconst mcpResponse = $input.first().json;\n\nconsole.log('MCP Response:', JSON.stringify(mcpResponse, null, 2));\n\nif (mcpResponse.id) {\n  return {\n    json: {\n      status: 'video_creation_started',\n      job_id: mcpResponse.id,\n      status_url: `http://178.156.142.35:4123/api/status/${mcpResponse.id}`,\n      scenario: $('üé≠ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è MCP').first().json.scenario,\n      message: `–í–∏–¥–µ–æ \"${$('üé≠ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è MCP').first().json.scenario.title}\" —Å–æ–∑–¥–∞–µ—Ç—Å—è...`\n    }\n  };\n} else {\n  return {\n    json: {\n      status: 'error',\n      message: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ –≤ MCP',\n      error: mcpResponse.error || mcpResponse.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',\n      full_response: mcpResponse\n    }\n  };\n}"
      },
      "id": "process-mcp-response",
      "name": "üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2440, 300]
    },
    {
      "parameters": {
        "url": "={{ $json.status_url }}",
        "options": {}
      },
      "id": "check-status",
      "name": "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2660, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "video-ready",
              "leftValue": "={{ $json.state }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-completion",
      "name": "‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [2880, 300]
    },
    {
      "parameters": {
        "amount": 15,
        "unit": "seconds"
      },
      "id": "wait-node",
      "name": "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [2880, 500]
    },
    {
      "parameters": {
        "jsCode": "// –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\nconst statusData = $input.first().json;\nconst scenario = $('üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP').first().json.scenario;\n\nreturn {\n  json: {\n    status: 'completed',\n    message: 'üéâ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!',\n    workflow_result: {\n      ai_agent: '‚úÖ –°–æ–∑–¥–∞–ª —Å—Ü–µ–Ω–∞—Ä–∏–π',\n      scenario_title: scenario.title,\n      images_downloaded: '‚úÖ 10 —Ñ–æ—Ç–æ —Å–∫–∞—á–∞–Ω–æ',\n      mcp_processing: statusData.state === 'completed' ? '‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ' : '‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ',\n      video_url: statusData.output_url || '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...',\n      duration: scenario.duration + ' —Å–µ–∫—É–Ω–¥',\n      created_at: new Date().toISOString()\n    },\n    full_status: statusData\n  }\n};"
      },
      "id": "final-result",
      "name": "üéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [3100, 300]
    }
  ],
  "connections": {
    "üöÄ –°—Ç–∞—Ä—Ç": {
      "main": [
        [
          {
            "node": "üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö": {
      "main": [
        [
          {
            "node": "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent": {
      "main": [
        [
          {
            "node": "üìã –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "üìã –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è": {
      "main": [
        [
          {
            "node": "üåê –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üåê –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π": {
      "main": [
        [
          {
            "node": "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ": {
      "main": [
        [
          {
            "node": "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π": {
      "main": [
        [
          {
            "node": "üé≠ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è MCP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üé≠ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è MCP": {
      "main": [
        [
          {
            "node": "üé¨ MCP –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üé¨ MCP –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ": {
      "main": [
        [
          {
            "node": "üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP": {
      "main": [
        [
          {
            "node": "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞": {
      "main": [
        [
          {
            "node": "‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ?": {
      "main": [
        [
          {
            "node": "üéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ": {
      "main": [
        [
          {
            "node": "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "triggerCount": 1,
  "versionId": "1"
}
