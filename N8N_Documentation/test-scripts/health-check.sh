#!/bin/bash

# üîç N8N Health Check Script
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è N8N —Å–∏—Å—Ç–µ–º—ã..."

SERVER="178.156.142.35"
ERRORS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_result() {
    local service=$1
    local status=$2
    local message=$3
    
    if [ "$status" = "success" ]; then
        echo "‚úÖ $service: $message"
    else
        echo "‚ùå $service: $message"
        ((ERRORS++))
    fi
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ N8N –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ N8N..."
if curl -s --max-time 10 https://mayersn8n.duckdns.org/healthz | grep -q "ok"; then
    log_result "N8N" "success" "–î–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTPS"
elif curl -s --max-time 10 http://$SERVER:5678 | grep -q "n8n"; then
    log_result "N8N" "success" "–î–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTP"
else
    log_result "N8N" "error" "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–∞
echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–∞..."
MCP_RESPONSE=$(ssh root@$SERVER "curl -s --max-time 5 http://localhost:4123/api/ping" 2>/dev/null)
if echo "$MCP_RESPONSE" | grep -q "ok"; then
    log_result "MCP" "success" "–†–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    log_result "MCP" "error" "–ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL..."
if ssh root@$SERVER "docker exec root-db-1 pg_isready -U n8n" 2>/dev/null | grep -q "accepting"; then
    log_result "PostgreSQL" "success" "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
else
    log_result "PostgreSQL" "error" "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
N8N_STATUS=$(ssh root@$SERVER "docker ps | grep n8n" | wc -l)
if [ $N8N_STATUS -gt 0 ]; then
    log_result "N8N Container" "success" "–ó–∞–ø—É—â–µ–Ω"
else
    log_result "N8N Container" "error" "–ù–µ –∑–∞–ø—É—â–µ–Ω"
fi

DB_STATUS=$(ssh root@$SERVER "docker ps | grep postgres" | wc -l)
if [ $DB_STATUS -gt 0 ]; then
    log_result "DB Container" "success" "–ó–∞–ø—É—â–µ–Ω"
else
    log_result "DB Container" "error" "–ù–µ –∑–∞–ø—É—â–µ–Ω"
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..."
DISK_USAGE=$(ssh root@$SERVER "df -h / | tail -1 | awk '{print \$5}' | sed 's/%//'" 2>/dev/null)
if [ -n "$DISK_USAGE" ] && [ $DISK_USAGE -lt 90 ]; then
    log_result "Disk Space" "success" "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${DISK_USAGE}%"
else
    log_result "Disk Space" "error" "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ –º–µ—Å—Ç–∞ (${DISK_USAGE}%)"
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö workflows
echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ workflows..."
ACTIVE_WORKFLOWS=$(ssh root@$SERVER "docker exec root-db-1 psql -U n8n -d n8n -t -c \"SELECT COUNT(*) FROM workflow_entity WHERE active = true;\"" 2>/dev/null | tr -d ' ')
if [ -n "$ACTIVE_WORKFLOWS" ] && [ $ACTIVE_WORKFLOWS -gt 0 ]; then
    log_result "Workflows" "success" "$ACTIVE_WORKFLOWS –∞–∫—Ç–∏–≤–Ω—ã—Ö workflows"
else
    log_result "Workflows" "error" "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö workflows"
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials
echo "7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials..."
CREDENTIALS_COUNT=$(ssh root@$SERVER "docker exec root-db-1 psql -U n8n -d n8n -t -c \"SELECT COUNT(*) FROM credentials_entity;\"" 2>/dev/null | tr -d ' ')
if [ -n "$CREDENTIALS_COUNT" ] && [ $CREDENTIALS_COUNT -gt 0 ]; then
    log_result "Credentials" "success" "$CREDENTIALS_COUNT credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
else
    log_result "Credentials" "error" "–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö credentials"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:"
if [ $ERRORS -eq 0 ]; then
    echo "üéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!"
    echo "‚úÖ N8N —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞"
    exit 0
else
    echo "‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–û $ERRORS –ü–†–û–ë–õ–ï–ú"
    echo "üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    exit 1
fi


