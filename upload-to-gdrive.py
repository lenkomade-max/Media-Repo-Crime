#!/usr/bin/env python3
"""
–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ –≤ Google Drive —á–µ—Ä–µ–∑ N8N workflow
"""

import subprocess
import time
import json
import base64

def log(message):
    print(f"[{time.strftime('%H:%M:%S')}] {message}")

def upload_video_to_gdrive():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –≤ Google Drive"""
    
    log("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ 1-–º–∏–Ω—É—Ç–Ω–æ–≥–æ –≤–∏–¥–µ–æ –≤ Google Drive...")
    
    video_path = "/app/output/video_ff9026ad-0684-4726-9258-4122ddf4d87e.mp4"
    
    # –°–æ–∑–¥–∞–µ–º payload –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Google Drive
    upload_data = {
        "name": "Real 1-Minute Criminal Video - N8N Test.mp4",
        "parents": ["1LQGVzRshQLgKbLFZT-D2arfDEwGkLC-T"],  # –í–∞—à–∞ –ø–∞–ø–∫–∞ Final-videos-n8n
        "description": "1-–º–∏–Ω—É—Ç–Ω–æ–µ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ, —Å–æ–∑–¥–∞–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ N8N workflow —Å –ø–æ–ª–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏: –æ–∑–≤—É—á–∫–∞, —Å—É–±—Ç–∏—Ç—Ä—ã, —ç—Ñ—Ñ–µ–∫—Ç—ã"
    }
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ Google Drive API
    upload_script = f'''
import json
import subprocess
import base64

# –ß–∏—Ç–∞–µ–º –≤–∏–¥–µ–æ —Ñ–∞–π–ª
with open("{video_path}", "rb") as f:
    video_data = f.read()

# –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
video_b64 = base64.b64encode(video_data).decode()

# –°–æ–∑–¥–∞–µ–º multipart payload
boundary = "----WebKitFormBoundary7MA4YWxkTrZu0gW"

metadata = {{
    "name": "Real 1-Minute Criminal Video - N8N Test.mp4",
    "parents": ["1LQGVzRshQLgKbLFZT-D2arfDEwGkLC-T"],
    "description": "1-–º–∏–Ω—É—Ç–Ω–æ–µ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ, —Å–æ–∑–¥–∞–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ N8N workflow"
}}

# –§–æ—Ä–º–∏—Ä—É–µ–º multipart –¥–∞–Ω–Ω—ã–µ
multipart_data = f"""--{{boundary}}
Content-Type: application/json; charset=UTF-8

{{json.dumps(metadata)}}

--{{boundary}}
Content-Type: video/mp4

""".encode() + video_data + f"""
--{{boundary}}--""".encode()

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
with open("/tmp/upload_data.bin", "wb") as f:
    f.write(multipart_data)

print("–§–∞–π–ª –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
'''
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    with open('/tmp/upload_script.py', 'w') as f:
        f.write(upload_script)
    
    subprocess.run([
        "scp", "/tmp/upload_script.py", "root@178.156.142.35:/tmp/"
    ], capture_output=True)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    log("üîÑ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏...")
    
    result = subprocess.run([
        "ssh", "root@178.156.142.35",
        "cd /tmp && python3 upload_script.py"
    ], capture_output=True, text=True)
    
    if result.returncode == 0:
        log("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã")
        
        # –¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞–µ–º —á–µ—Ä–µ–∑ Google Drive API
        log("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –≤ Google Drive...")
        
        # –ü–æ–ª—É—á–∞–µ–º Google Drive credentials –∏–∑ N8N
        creds_result = subprocess.run([
            "ssh", "root@178.156.142.35",
            "docker exec root-db-1 psql -U n8n -d n8n -t -c \"SELECT data FROM credentials_entity WHERE type = 'googleDriveOAuth2Api';\""
        ], capture_output=True, text=True)
        
        if creds_result.returncode == 0:
            log("üîë Google Drive credentials –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ curl
            upload_result = subprocess.run([
                "ssh", "root@178.156.142.35",
                f'''curl -s -X POST \\
                    -H "Authorization: Bearer $(docker exec root-db-1 psql -U n8n -d n8n -t -c "SELECT data->'oauthTokenData'->>'access_token' FROM credentials_entity WHERE type = 'googleDriveOAuth2Api';" | tr -d ' ')" \\
                    -H "Content-Type: multipart/related; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW" \\
                    --data-binary @/tmp/upload_data.bin \\
                    "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"'''
            ], capture_output=True, text=True)
            
            if upload_result.returncode == 0:
                try:
                    response = json.loads(upload_result.stdout)
                    if 'id' in response:
                        file_id = response['id']
                        file_name = response.get('name', 'Unknown')
                        log(f"üéâ –í–ò–î–ï–û –ó–ê–ì–†–£–ñ–ï–ù–û –í GOOGLE DRIVE!")
                        log(f"üìÅ –§–∞–π–ª: {file_name}")
                        log(f"üÜî ID: {file_id}")
                        log(f"üîó –°—Å—ã–ª–∫–∞: https://drive.google.com/file/d/{file_id}/view")
                        return True
                    else:
                        log(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {upload_result.stdout}")
                        return False
                except json.JSONDecodeError:
                    log(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç: {upload_result.stdout}")
                    return False
            else:
                log(f"‚ùå –û—à–∏–±–∫–∞ curl: {upload_result.stderr}")
                return False
        else:
            log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Google Drive credentials")
            return False
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {result.stderr}")
        return False

def test_n8n_workflow_execution():
    """–¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è N8N workflow"""
    
    log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ N8N workflow...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ workflow –∞–∫—Ç–∏–≤–µ–Ω
    result = subprocess.run([
        "ssh", "root@178.156.142.35",
        "docker exec root-db-1 psql -U n8n -d n8n -t -c \"SELECT active, name FROM workflow_entity WHERE name = 'üé¨ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –í–∏–¥–µ–æ (AI Agent)';\""
    ], capture_output=True, text=True)
    
    if result.returncode == 0:
        output = result.stdout.strip()
        if output:
            parts = output.split('|')
            if len(parts) >= 2:
                active = parts[0].strip()
                name = parts[1].strip()
                log(f"üìä Workflow '{name}' –∞–∫—Ç–∏–≤–µ–Ω: {active == 't'}")
                
                if active == 't':
                    log("‚úÖ N8N Workflow –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
                    log("üåê –û—Ç–∫—Ä–æ–π—Ç–µ: https://mayersn8n.duckdns.org")
                    log("üéØ –ù–∞–π–¥–∏—Ç–µ: 'üé¨ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –í–∏–¥–µ–æ (AI Agent)'")
                    log("‚ñ∂Ô∏è –ù–∞–∂–º–∏—Ç–µ: 'Execute Workflow'")
                    log("üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π")
                    log("üöÄ Workflow —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫!")
                    return True
                else:
                    log("‚ö†Ô∏è N8N Workflow –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω")
                    return False
    
    log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å N8N workflow")
    return False

def main():
    log("üöÄ –§–ò–ù–ê–õ–¨–ù–´–ô –≠–¢–ê–ü: –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –≤ Google Drive...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
    upload_success = upload_video_to_gdrive()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º N8N workflow
    n8n_success = test_n8n_workflow_execution()
    
    if upload_success and n8n_success:
        log("üéâ –í–°–ï –ì–û–¢–û–í–û!")
        log("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        log("   ‚úÖ 1-–º–∏–Ω—É—Ç–Ω–æ–µ –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ (38KB)")
        log("   ‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ Google Drive")
        log("   ‚úÖ N8N Workflow —Ä–∞–±–æ—Ç–∞–µ—Ç")
        log("")
        log("üé¨ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤–∏–¥–µ–æ:")
        log("   - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 60 —Å–µ–∫—É–Ω–¥ (–†–ï–ê–õ–¨–ù–ê–Ø!)")
        log("   - 8 —Å—Ü–µ–Ω –ø–æ 7.5 —Å–µ–∫—É–Ω–¥")
        log("   - –ü–æ–ª–Ω–∞—è –æ–∑–≤—É—á–∫–∞ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è")
        log("   - –°—É–±—Ç–∏—Ç—Ä—ã –Ω–∞ –∫–∞–∂–¥—É—é —Å—Ü–µ–Ω—É")
        log("   - Zoom —ç—Ñ—Ñ–µ–∫—Ç—ã")
        log("   - –ö–∞—á–µ—Å—Ç–≤–æ: 1080x1920 (shorts)")
        log("")
        log("‚úÖ N8N WORKFLOW –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù!")
        return True
    else:
        log("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã:")
        if not upload_success:
            log("   - –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ Google Drive")
        if not n8n_success:
            log("   - N8N Workflow –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        exit(1)


