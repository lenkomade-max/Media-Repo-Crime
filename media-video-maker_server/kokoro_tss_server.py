#!/usr/bin/env python3
"""
Kokoro TTS HTTP Server
–û–±—Å–ª—É–∂–∏–≤–∞–µ—Ç HTTP API –¥–ª—è –Ω–∞—à–µ–≥–æ media-server
"""

from flask import Flask, request, jsonify, send_file
import tempfile
import os
from kokoro_tts import Kokoro, convert_text_to_audio, list_available_voices

app = Flask(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Kokoro TTS
try:
    print("‚úÖ Kokoro TTS –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞
    voices = list_available_voices()
    print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞: {voices}")
    kokoro_ready = True
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Kokoro TTS: {e}")
    kokoro_ready = False

@app.route('/health', methods=['GET'])
def health():
    """Health check endpoint"""
    return jsonify({"status": "ok", "provider": "kokoro-tts", "ready": kokoro_ready})

@app.route('/voices', methods=['GET'])
def list_voices():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤"""
    if not kokoro_ready:
        return jsonify({"error": "Kokoro TTS –Ω–µ –≥–æ—Ç–æ–≤"}), 500
    
    try:
        voices = list_available_voices()
        return jsonify({"voices": voices})
    except Exception as e:
        return jsonify({"error": f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤: {e}"}), 500

@app.route('/v1/tts', methods=['POST'])
def text_to_speech():
    """–û—Å–Ω–æ–≤–Ω–æ–π TTS endpoint"""
    if not kokoro_ready:
        return jsonify({"error": "Kokoro TTS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"}), 500
    
    try:
        data = request.get_json()
        text = data.get('text', '')
        voice = data.get('voice', 'default')
        format = data.get('format', 'wav')
        
        if not text:
            return jsonify({"error": "–¢–µ–∫—Å—Ç –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω"}), 400
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(suffix=f'.{format}', delete=False) as temp_file:
            temp_path = temp_file.name
            
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—á—å —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é
        convert_text_to_audio(text=text, output_file=temp_path, voice=voice)
        
        return send_file(temp_path, as_attachment=True, 
                       download_name=f'speech.{format}',
                       mimetype='audio/wav' if format == 'wav' else 'audio/mpeg')
       
    except Exception as e:
        return jsonify({"error": f"–û—à–∏–±–∫–∞ TTS: {e}"}), 500

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ Kokoro TTS Server –Ω–∞ –ø–æ—Ä—Ç—É 11402...")
    app.run(host='0.0.0.0', port=11402, debug=False)