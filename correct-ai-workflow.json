{
  "name": "üé¨ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –í–∏–¥–µ–æ (AI Agent)",
  "active": true,
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger",
      "name": "üöÄ –ó–∞–ø—É—Å–∫",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "promptType": "auto",
        "text": "={{ $json.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [460, 300],
      "id": "ai-screenwriter-agent",
      "name": "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "anthropic/claude-3.5-sonnet",
          "cachedResultName": "Claude 3.5 Sonnet"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [460, 480],
      "id": "openrouter-chat-model",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "dctACn3yXSG7qIdH",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "video-creation-session"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [680, 480],
      "id": "simple-memory",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "jsCode": "// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞\nconst topic = $input.first().json.topic || '–∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è';\n\nconst prompt = `–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç –¥–ª—è –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã—Ö shorts –≤–∏–¥–µ–æ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π.\n\n–¢–µ–º–∞: ${topic}\n\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:\n1. –°–æ–∑–¥–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 30-60 —Å–µ–∫—É–Ω–¥\n2. –†–∞–∑–¥–µ–ª–∏ –Ω–∞ 5-8 —Å—Ü–µ–Ω –ø–æ 3-8 —Å–µ–∫—É–Ω–¥ –∫–∞–∂–¥–∞—è\n3. –ü–µ—Ä–≤—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–æ—â–Ω—ã–π –∫—Ä—é–∫\n4. –ö–∞–∂–¥–∞—è —Å—Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —á–µ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª–∞\n5. –î–æ–±–∞–≤—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n6. –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¢–û–õ–¨–ö–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ\n\n–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:\n{\n  \"title\": \"–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ\",\n  \"hook\": \"–ö—Ä—é–∫ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 3 —Å–µ–∫—É–Ω–¥\",\n  \"duration\": 45,\n  \"scenes\": [\n    {\n      \"id\": 1,\n      \"duration\": 6,\n      \"voiceover\": \"–¢–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏\",\n      \"subtitle\": \"–°—É–±—Ç–∏—Ç—Ä—ã\",\n      \"visual_description\": \"–û–ø–∏—Å–∞–Ω–∏–µ —á—Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å\",\n      \"search_keywords\": [\"crime scene\", \"police\"],\n      \"mood\": \"dark\"\n    }\n  ],\n  \"total_voiceover\": \"–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –æ–∑–≤—É—á–∫–∏\",\n  \"music_style\": \"dark_ambient\"\n}`;\n\nreturn {\n  json: {\n    chatInput: prompt,\n    topic: topic\n  }\n};"
      },
      "id": "prepare-screenwriter-prompt",
      "name": "üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç –æ—Ç AI Agent\nconst response = $input.first().json.output;\nlet scenario;\n\ntry {\n  const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n  if (jsonMatch) {\n    scenario = JSON.parse(jsonMatch[0]);\n  } else {\n    throw new Error('JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ');\n  }\n} catch (error) {\n  console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è:', error);\n  scenario = {\n    title: \"–¢–µ—Å—Ç–æ–≤—ã–π –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π —Å—é–∂–µ—Ç\",\n    duration: 30,\n    scenes: [\n      {\n        id: 1,\n        duration: 10,\n        voiceover: \"–í —Ç–µ–º–Ω–æ–º –ø–µ—Ä–µ—É–ª–∫–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∑–∞–≥–∞–¥–æ—á–Ω–æ–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ\",\n        visual_description: \"–¢–µ–º–Ω–∞—è —É–ª–∏—Ü–∞ —Å –ø–æ–ª–∏—Ü–µ–π—Å–∫–æ–π –ª–µ–Ω—Ç–æ–π\",\n        search_keywords: [\"crime scene\", \"police tape\", \"dark street\"]\n      },\n      {\n        id: 2,\n        duration: 10,\n        voiceover: \"–î–µ—Ç–µ–∫—Ç–∏–≤—ã –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ\",\n        visual_description: \"–î–µ—Ç–µ–∫—Ç–∏–≤—ã –∏–∑—É—á–∞—é—Ç —É–ª–∏–∫–∏\",\n        search_keywords: [\"detective\", \"investigation\", \"evidence\"]\n      },\n      {\n        id: 3,\n        duration: 10,\n        voiceover: \"–ù–æ –ø—Ä–∞–≤–¥–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å —à–æ–∫–∏—Ä—É—é—â–µ–π\",\n        visual_description: \"–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ\",\n        search_keywords: [\"revelation\", \"shock\", \"truth\"]\n      }\n    ],\n    total_voiceover: \"–í —Ç–µ–º–Ω–æ–º –ø–µ—Ä–µ—É–ª–∫–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∑–∞–≥–∞–¥–æ—á–Ω–æ–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ. –î–µ—Ç–µ–∫—Ç–∏–≤—ã –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ. –ù–æ –ø—Ä–∞–≤–¥–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å —à–æ–∫–∏—Ä—É—é—â–µ–π.\",\n    music_style: \"dark_ambient\"\n  };\n}\n\nreturn {\n  json: {\n    scenario: scenario,\n    topic: $('üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞').first().json.topic\n  }\n};"
      },
      "id": "parse-scenario",
      "name": "üìã –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1R8DSsDKqGBaBvI4D1T_L1AM9vHz0Y-Yq",
            "mode": "list",
            "cachedResultName": "Baza-n8n"
          }
        },
        "options": {}
      },
      "id": "google-drive-search",
      "name": "üìÅ AI –†–µ–∂–∏—Å—Å–µ—Ä - –ü–æ–∏—Å–∫ –≤ Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [1120, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "XDM9FIbDJMpu7nGH",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}"
        },
        "options": {}
      },
      "id": "download-images",
      "name": "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [1340, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "XDM9FIbDJMpu7nGH",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const fs = require('fs');\nconst path = require('path');\n\nconst executionId = $workflow.executionId;\nconst tempDir = `/tmp/n8n_video_${executionId}`;\n\nif (!fs.existsSync(tempDir)) {\n  fs.mkdirSync(tempDir, { recursive: true });\n}\n\nconst allItems = $input.all();\nconst scenario = $('üìã –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è').first().json.scenario;\n\nconsole.log('–í—Å–µ–≥–æ —Å–∫–∞—á–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', allItems.length);\nconst validItems = allItems.filter(item => item.binary && item.binary.data);\nconsole.log('–≠–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏:', validItems.length);\n\nconst imageItems = validItems.slice(0, 30);\nlet savedCount = 0;\n\nfor (let i = 0; i < imageItems.length; i++) {\n  const item = imageItems[i];\n  const filename = `img${String(i + 1).padStart(3, '0')}.jpg`;\n  const filepath = path.join(tempDir, filename);\n  \n  try {\n    const buffer = Buffer.from(item.binary.data.data, 'base64');\n    fs.writeFileSync(filepath, buffer);\n    savedCount++;\n  } catch (err) {\n    console.log('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', filename, err.message);\n  }\n}\n\nconsole.log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${savedCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);\n\n// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Ñ–æ—Ç–æ\nconst requiredImages = scenario.scenes ? scenario.scenes.length : 5;\nconst needMoreImages = savedCount < requiredImages;\n\nreturn {\n  json: {\n    tempDir: tempDir,\n    savedImages: savedCount,\n    requiredImages: requiredImages,\n    needMoreImages: needMoreImages,\n    scenario: scenario,\n    executionId: executionId\n  }\n};"
      },
      "id": "save-and-analyze",
      "name": "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "need-more-images",
              "leftValue": "={{ $json.needMoreImages }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-images",
      "name": "‚ùì –ù—É–∂–Ω—ã –ª–∏ –µ—â–µ —Ñ–æ—Ç–æ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "promptType": "auto",
        "text": "–°–æ–∑–¥–∞–π –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ü–µ–Ω–∞—Ä–∏—è: {{ $('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ').first().json.scenario }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [2000, 200],
      "id": "ai-image-prompts-agent",
      "name": "üé® AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "anthropic/claude-3.5-sonnet",
          "cachedResultName": "Claude 3.5 Sonnet"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [2000, 380],
      "id": "openrouter-chat-model2",
      "name": "OpenRouter Chat Model2",
      "credentials": {
        "openRouterApi": {
          "id": "dctACn3yXSG7qIdH",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $workflow.executionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [2220, 380],
      "id": "simple-memory2",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "jsCode": "// AI –ü—Ä–æ–¥—é—Å–µ—Ä - —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏ —Å–æ–∑–¥–∞–µ–º JSON –¥–ª—è MCP\nconst scenario = $('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ').first().json.scenario;\nconst tempDir = $('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ').first().json.tempDir;\n\n// –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –¥–ª—è MCP —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É API\nconst files = [];\nconst scenes = scenario.scenes || [];\n\nfor (let i = 0; i < scenes.length; i++) {\n  const scene = scenes[i];\n  files.push({\n    id: `scene_${i + 1}`,\n    src: `${tempDir}/img${String(i + 1).padStart(3, '0')}.jpg`,\n    type: \"image\"\n  });\n}\n\n// –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π JSON –¥–ª—è MCP —Å–æ–≥–ª–∞—Å–Ω–æ PlanInputSchema\nconst mcpPayload = {\n  files: files,\n  width: 1080,\n  height: 1920,\n  fps: 30,\n  durationPerPhoto: 5,\n  outputFormat: \"mp4\",\n  \n  // TTS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n  tts: {\n    provider: \"kokoro\",\n    text: scenario.total_voiceover || \"–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –æ–∑–≤—É—á–∫–∏\"\n  },\n  \n  // –°—É–±—Ç–∏—Ç—Ä—ã\n  transcribeAudio: true,\n  burnSubtitles: true,\n  \n  // –≠—Ñ—Ñ–µ–∫—Ç—ã\n  effects: [\n    {\n      kind: \"zoom\",\n      params: {\n        startScale: 1.0,\n        endScale: 1.2\n      }\n    }\n  ],\n  \n  // –ê—É–¥–∏–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n  musicVolumeDb: -8,\n  ducking: {\n    enabled: true,\n    musicDuckDb: -8,\n    threshold: 0.05,\n    ratio: 8,\n    attack: 5,\n    release: 250\n  },\n  \n  // –û–≤–µ—Ä–ª–µ–∏\n  overlays: []\n};\n\nreturn {\n  json: {\n    mcp_payload: mcpPayload,\n    scenario: scenario,\n    tempDir: tempDir,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "ai-producer",
      "name": "üé≠ AI –ü—Ä–æ–¥—é—Å–µ—Ä - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ MCP",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2440, 300]
    },
    {
      "parameters": {
        "url": "http://178.156.142.35:4123/api/create-video",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify($json.mcp_payload) }}",
        "options": {}
      },
      "id": "mcp-video-creation",
      "name": "üé¨ MCP –ú–æ–Ω—Ç–∞–∂–µ—Ä",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2660, 300]
    },
    {
      "parameters": {
        "jsCode": "// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç MCP —Å–µ—Ä–≤–µ—Ä–∞\nconst mcpResponse = $input.first().json;\n\nif (mcpResponse.id) {\n  return {\n    json: {\n      status: 'video_creation_started',\n      job_id: mcpResponse.id,\n      progress: 0,\n      message: `üé¨ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è! ID –∑–∞–¥–∞—á–∏: ${mcpResponse.id}`,\n      status_url: `http://178.156.142.35:4123/api/status/${mcpResponse.id}`,\n      scenario: $('üé≠ AI –ü—Ä–æ–¥—é—Å–µ—Ä - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ MCP').first().json.scenario\n    }\n  };\n} else {\n  return {\n    json: {\n      status: 'error',\n      message: '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ',\n      error: mcpResponse.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'\n    }\n  };\n}"
      },
      "id": "process-mcp-response",
      "name": "üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2880, 300]
    },
    {
      "parameters": {
        "url": "={{ $json.status_url }}",
        "options": {}
      },
      "id": "check-video-status",
      "name": "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [3100, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "video-completed",
              "leftValue": "={{ $json.state }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-completion",
      "name": "‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [3320, 300]
    },
    {
      "parameters": {
        "amount": 15,
        "unit": "seconds"
      },
      "id": "wait-for-completion",
      "name": "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [3320, 500]
    },
    {
      "parameters": {
        "url": "={{ $json.output_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "download-video",
      "name": "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [3540, 200]
    },
    {
      "parameters": {
        "operation": "upload",
        "name": "={{ $('üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP').first().json.scenario.title || 'Generated Video' }}.mp4",
        "binaryData": true,
        "binaryPropertyName": "data",
        "parents": {
          "__rl": true,
          "value": "1LQGVzRshQLgKbLFZT-D2arfDEwGkLC-T",
          "mode": "list"
        },
        "options": {}
      },
      "id": "upload-to-gdrive",
      "name": "üì§ AI –ü—É–±–ª–∏–∫–∞—Ç–æ—Ä - –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [3760, 200],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "XDM9FIbDJMpu7nGH",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\nconst videoData = $input.first().json;\nconst scenario = $('üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP').first().json.scenario;\n\nreturn {\n  json: {\n    status: 'completed',\n    message: 'üéâ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!',\n    title: scenario.title,\n    video_url: videoData.output_url,\n    gdrive_url: videoData.webViewLink,\n    duration: scenario.duration,\n    created_at: new Date().toISOString(),\n    workflow_success: true\n  }\n};"
      },
      "id": "final-result",
      "name": "üéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
        "position": [3980, 300]
    }
  ],
  "connections": {
    "üöÄ –ó–∞–ø—É—Å–∫": {
      "main": [
        [
          {
            "node": "üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent": {
      "main": [
        [
          {
            "node": "üìã –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞": {
      "main": [
        [
          {
            "node": "üé≠ AI –°—Ü–µ–Ω–∞—Ä–∏—Å—Ç Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìã –ü–∞—Ä—Å–∏–Ω–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è": {
      "main": [
        [
          {
            "node": "üìÅ AI –†–µ–∂–∏—Å—Å–µ—Ä - –ü–æ–∏—Å–∫ –≤ Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìÅ AI –†–µ–∂–∏—Å—Å–µ—Ä - –ü–æ–∏—Å–∫ –≤ Google Drive": {
      "main": [
        [
          {
            "node": "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ": {
      "main": [
        [
          {
            "node": "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ": {
      "main": [
        [
          {
            "node": "‚ùì –ù—É–∂–Ω—ã –ª–∏ –µ—â–µ —Ñ–æ—Ç–æ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì –ù—É–∂–Ω—ã –ª–∏ –µ—â–µ —Ñ–æ—Ç–æ?": {
      "main": [
        [
          {
            "node": "üé® AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "üé≠ AI –ü—Ä–æ–¥—é—Å–µ—Ä - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ MCP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üé® AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ Agent": {
      "main": [
        [
          {
            "node": "üé≠ AI –ü—Ä–æ–¥—é—Å–µ—Ä - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ MCP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "üé® AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "üé® AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "üé≠ AI –ü—Ä–æ–¥—é—Å–µ—Ä - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ MCP": {
      "main": [
        [
          {
            "node": "üé¨ MCP –ú–æ–Ω—Ç–∞–∂–µ—Ä",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üé¨ MCP –ú–æ–Ω—Ç–∞–∂–µ—Ä": {
      "main": [
        [
          {
            "node": "üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ MCP": {
      "main": [
        [
          {
            "node": "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ": {
      "main": [
        [
          {
            "node": "‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ?": {
      "main": [
        [
          {
            "node": "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è": {
      "main": [
        [
          {
            "node": "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ": {
      "main": [
        [
          {
            "node": "üì§ AI –ü—É–±–ª–∏–∫–∞—Ç–æ—Ä - –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì§ AI –ü—É–±–ª–∏–∫–∞—Ç–æ—Ä - –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ Google Drive": {
      "main": [
        [
          {
            "node": "üéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "triggerCount": 1,
  "versionId": "1"
}
